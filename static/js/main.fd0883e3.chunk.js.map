{"version":3,"sources":["AppHeader.js","slider/Slider.js","Calendar.js","Details.js","AppBody.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","window","location","href","_this","this","react_default","a","createElement","className","index_es","icon","faPlane","onClick","moveBack","faChevronLeft","Component","Slider","listItems","map","delta","day","Date","props","currentDate","getTime","setDate","getDate","date","key","toString","onDateClick","dist_default","locale","format","Calendar","onDateChange","faCalendarAlt","src_slider_Slider","Details","data","dataByDates","obj","departure","arrival","cost","AppBody","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","today","dates","i","length","generateRandomData","state","Array","Math","floor","random","currentDay","setState","_this2","src_Calendar_0","src_Details_0","App","src_AppHeader_0","src_AppBody","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gWAgCeA,4LAxBXC,OAAOC,SAASC,KAAO,uEAGhB,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BAAhB,wCACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAMC,MACvBN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,yCAEFH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAb,qJACAH,EAAAC,EAAAC,cAAA,UACEK,QAAS,WAAQT,EAAKU,YACtBL,UAAU,mBAEVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAMI,eAlBTC,8BCgDTC,gMAhDJ,IAAAb,EAAAC,KAODa,EANQ,EAAE,GAAI,EAAG,EAAG,EAAG,GACTC,IAAI,SAACC,GACvB,IAAIC,EAAM,IAAIC,KAAKlB,EAAKmB,MAAMC,YAAYC,WAE1C,OADAJ,EAAIK,QAAQtB,EAAKmB,MAAMC,YAAYG,UAAYP,GACxCC,IAEeF,IAAI,SAACS,GAAD,OAC1BtB,EAAAC,EAAAC,cAAA,MACEqB,IAAKD,EAAKE,WACVrB,UAAU,cACVI,QAAS,WAAMT,EAAKmB,MAAMQ,YAAYH,KAEtCtB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAQ0B,OAAO,KAAKC,OAAO,KAAKzB,UAAU,mBACvCmB,IAGLtB,EAAAC,EAAAC,cAAA,SACGoB,EAAKH,YAAcrB,EAAKmB,MAAMC,YAAYC,UACvCnB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAQ0B,OAAO,KAAKC,OAAO,IAAIzB,UAAU,sCACtCmB,GAGHtB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAQ0B,OAAO,KAAKC,OAAO,IAAIzB,UAAU,wBACtCmB,IAKRA,EAAKH,YAAcrB,EAAKmB,MAAMC,YAAYC,WACvCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAGnBH,EAAAC,EAAAC,cAAA,qBAMJ,OACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXS,UA3CYF,cCgCNmB,6LA5BDP,GACVvB,KAAKkB,MAAMa,aAAaR,oCAGjB,IAAAxB,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAM0B,MACvB/B,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CACEE,UAAU,wBACVwB,OAAO,KACPC,OAAO,QAEN7B,KAAKkB,MAAMK,OAGhBtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC8B,EAAD,CACEd,YAAanB,KAAKkB,MAAMK,KACxBG,YAAa,SAACH,GAAUxB,EAAK2B,YAAYH,eArB9BZ,cCqCRuB,0LAvCX,IAEMC,EAFcnC,KAAKkB,MAAMkB,YAClBpC,KAAKkB,MAAMK,KACMH,WAE1BP,EAAY,GAwBhB,OAvBIsB,IACFtB,EAAYsB,EAAKrB,IAAI,SAACuB,GAAD,OACnBpC,EAAAC,EAAAC,cAAA,MACEqB,IAAOa,EAAIb,IACXpB,UAAY,gBAEZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACbiC,EAAIC,UADP,WACqBD,EAAIE,SAEzBtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACdH,EAAAC,EAAAC,cAAA,+BADF,IACuBkC,EAAIG,KAD3B,YAIFvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAAb,+FAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAAb,sGAOJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,uEACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACXS,WAnCWF,cC4EP8B,cA1Eb,SAAAA,EAAYvB,GAAO,IAAAnB,EAAA2C,OAAAC,EAAA,EAAAD,CAAA1C,KAAAyC,GACjB1C,EAAA2C,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA9C,KAAMkB,IAWN,IATA,IAAM6B,EAAQ,IAAI9B,KAEZ+B,EADQ,EAAE,GAAI,EAAG,EAAG,EAAG,GACTlC,IAAI,SAACC,GACvB,IAAIC,EAAM,IAAIC,KAAK8B,EAAM3B,WAEzB,OADAJ,EAAIK,QAAQ0B,EAAMzB,UAAYP,GACvBC,IAGLoB,EAAc,GACTa,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAErCb,EADaY,EAAMC,GACF7B,WAAarB,EAAKoD,qBAdpB,OAiBjBpD,EAAKqD,MAAQ,CACXjC,YAAa4B,EACbX,YAAaA,GAnBErC,oFAyBjB,IADA,IAAIoC,EAAO,IAAIkB,MAAMC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAC7CP,EAAI,EAAGA,EAAId,EAAKe,OAAQD,IAC/Bd,EAAKc,GAAK,CACRX,UAAa,QACbC,QAAW,QACXC,KAAQ,IAAwC,IAAjCc,KAAKC,MAAsB,GAAhBD,KAAKE,UAC/BhC,IAAOyB,GAGX,OAAOd,uCAGIZ,GACX,IAAIkC,EAAazD,KAAKoD,MAAMjC,YACxBiB,EAAcpC,KAAKoD,MAAMhB,YAE7B,GAAIb,EAAKD,YAAcmC,EAAWnC,UAAlC,CASA,IANA,IACM0B,EADQ,EAAE,GAAI,EAAG,EAAG,EAAG,GACTlC,IAAI,SAACC,GACvB,IAAIC,EAAM,IAAIC,KAAKwC,EAAWrC,WAE9B,OADAJ,EAAIK,QAAQoC,EAAWnC,UAAYP,GAC5BC,IAEAiC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAM1B,EAAOyB,EAAMC,GACdb,EAAYb,EAAKH,aACpBgB,EAAYb,EAAKH,WAAapB,KAAKmD,sBAGvCnD,KAAK0D,SAAS,CAAEvC,YAAaI,sCAGtB,IAAAoC,EAAA3D,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACyD,EAAD,CACErC,KAAMvB,KAAKoD,MAAMjC,YACjBY,aAAc,SAACR,GAAUoC,EAAK5B,aAAaR,MAEjDtB,EAAAC,EAAAC,cAAC0D,EAAD,CACMtC,KAAMvB,KAAKoD,MAAMjC,YACjBiB,YAAapC,KAAKoD,MAAMhB,sBApEZzB,aCYPmD,0LATX,OACE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAC6D,EAAD,cALUrD,cCOEsD,QACW,cAA7BrE,OAAOC,SAASqE,UAEe,UAA7BtE,OAAOC,SAASqE,UAEhBtE,OAAOC,SAASqE,SAASC,MACvB,2DCZNC,IAASC,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fd0883e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlane } from '@fortawesome/free-solid-svg-icons'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport './AppHeader.css';\n\nclass AppHeader extends Component {\n  moveBack() {    \n    window.location.href = 'https://github.com/VadimCpp/flights';\n  }\n\n  render() {\n    return (\n      <header className=\"App-header\">\n        <h1 className=\"App-header_title\"> \n          <span className=\"App-header_title__departure\">Москва</span> \n          <FontAwesomeIcon icon={faPlane} /> \n          <span className=\"App-header_title__arrival\">Тюмень</span>\n    \t  </h1>\n        <p className=\"App-header_subtitle\"> Шаг 1 из 5. Выберите рейс «Туда» </p>\n        <button \n          onClick={() => { this.moveBack()}}\n          className=\"App-header_back\"\n        > \n          <FontAwesomeIcon icon={faChevronLeft} />\n    \t  </button>\n      </header>\n    )\n  }\n}\n\n\nexport default AppHeader;\n","import React, { Component } from 'react';\nimport Moment from 'react-moment';\nimport 'moment/locale/ru';\nimport './Slider.css';\n\nclass Slider extends Component {\n  render() {    \n    const delta = [-2, -1, 0, 1, 2];\n    const dates = delta.map((delta) => {\n      let day = new Date(this.props.currentDate.getTime());\n      day.setDate(this.props.currentDate.getDate() + delta);      \n      return day;\n    });\n    const listItems = dates.map((date) =>\n      <li\n        key={date.toString()} \n        className='slider-item'\n        onClick={()=>{ this.props.onDateClick(date); }}\n      >\n        <p>\n          <Moment locale=\"ru\" format=\"dd\" className='slider-item_day'>\n            {date}\n          </Moment>\n        </p>\n        <p>\n          {date.getTime() === this.props.currentDate.getTime() ? (\n              <Moment locale=\"ru\" format=\"D\" className=\"selected-date calendar-header_date\">\n                {date}\n              </Moment>\n            ) : (\n              <Moment locale=\"ru\" format=\"D\" className=\"calendar-header_date\">\n                {date}\n              </Moment>\n            )\n          }\n        </p>\n        {date.getTime() === this.props.currentDate.getTime() &&\n            <div className=\"selection-circle\">\n            </div>\n        }\n        <p>\n          4000+\n        </p>      \n      </li>\n    );\n\n    return (\n      <ul className=\"slider\">\n        {listItems}\n      </ul>\n    )\n  }  \n}\n\nexport default Slider;\n","import React, { Component } from 'react';\nimport Moment from 'react-moment';\nimport 'moment/locale/ru';\nimport Slider from './slider/Slider.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\nimport './Calendar.css';\n\nclass Calendar extends Component {\n  onDateClick(date) {\n    this.props.onDateChange(date);    \n  }\n\n  render() {    \n    return (    \n      <div className=\"calendar\">\n        <div className=\"calendar-header\">\n          <FontAwesomeIcon icon={faCalendarAlt} />\n          <Moment \n            className=\"calendar-header_month\"\n            locale=\"ru\"\n            format=\"MMMM\"\n          >\n            {this.props.date}\n          </Moment>\n        </div>\n        <div className=\"calendar-slider\">          \n          <Slider \n            currentDate={this.props.date}\n            onDateClick={(date) => {this.onDateClick(date)}}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport './Details.css';\n\nclass Details extends Component {\n\n  render() {\n    const dataByDates = this.props.dataByDates;\n    const date = this.props.date;\n    const data = dataByDates[date.getTime()];\n\n    let listItems = [];\n    if (data) {\n      listItems = data.map((obj) => (\n        <li\n          key = {obj.key}\n          className = 'details-item'\n        >\n          <p className='details-item__headline'>\n            <span className='details-item__time'>\n              {obj.departure} → {obj.arrival}\n            </span>\n            <span className='details-item__cost'>\n              <small> от </small> {obj.cost} ₽\n            </span>\n          </p>\n          <p className='details-item__secondary'>\n            Внуково, VKO - Рощино, TJM\n          </p>\n          <p className='details-item__secondary'>\n            Время в пути: 2 ч 40 мин\n          </p>\n        </li>\n      ));\n    }\n    return (\n      <div className=\"details\">\n        <p className=\"details-title\">Прямые рейсы</p>\n        <ul className=\"details-slider\">\n          {listItems}\n      \t</ul>\n      </div>\n    )\n  }\n}\n\nexport default Details;\n","import React, { Component } from 'react';\nimport Calendar from './Calendar.js'\nimport Details from './Details.js'\n\nclass AppBody extends Component {\n  constructor(props) {\n    super(props);\n    \n    const today = new Date();\n    const delta = [-2, -1, 0, 1, 2];\n    const dates = delta.map((delta) => {\n      let day = new Date(today.getTime());\n      day.setDate(today.getDate() + delta);      \n      return day;\n    });\n\n    var dataByDates = {};\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      dataByDates[date.getTime()] = this.generateRandomData();\n    }\n\n    this.state = {\n      currentDate: today,\n      dataByDates: dataByDates,\n    };\n  }\n\n  generateRandomData() {    \n    let data = new Array(Math.floor(Math.random() * 11) + 20);\n    for (let i = 0; i < data.length; i++) {\n      data[i] = {\n        'departure': '00:05',\n        'arrival': '04:45',\n        'cost': 4000 + Math.floor(Math.random() * 11) * 500,\n        'key': i,\n      }      \n    }\n    return data;\n  }\n\n  onDateChange(date) {\n    let currentDay = this.state.currentDate;\n    var dataByDates = this.state.dataByDates;\n\n    if (date.getDate() === currentDay.getDate())\n      return;    \n\n    const delta = [-2, -1, 0, 1, 2];\n    const dates = delta.map((delta) => {\n      let day = new Date(currentDay.getTime());\n      day.setDate(currentDay.getDate() + delta);      \n      return day;\n    });\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      if (!dataByDates[date.getTime()])\n        dataByDates[date.getTime()] = this.generateRandomData();\n    }\n\n    this.setState({ currentDate: date });\n  }\n\n  render() {\n    return (\n      <div className=\"App-body\">\n        <Calendar \n          date={this.state.currentDate}\n          onDateChange={(date) => {this.onDateChange(date)}}\n    \t/>\n  \t\t<Details\n          date={this.state.currentDate}\n          dataByDates={this.state.dataByDates}\n\t \t  />\n      </div>\n    )\n  }\n}\n\nexport default AppBody;\n","import React, { Component } from 'react';\nimport AppHeader from './AppHeader.js'\nimport AppBody from './AppBody.js'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (      \n      <div className=\"App\">\n        <AppHeader />\n        <AppBody />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}